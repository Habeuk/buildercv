"use strict";(("undefined"!==typeof self?self:this)["webpackChunkBuilderCv"]=("undefined"!==typeof self?self:this)["webpackChunkBuilderCv"]||[]).push([[365],{4365:function(e,t,i){i.r(t),i.d(t,{default:function(){return f}});var n=function(){var e=this,t=e._self._c;return t("div",[t("b-form-group",{attrs:{label:e.field.label}},[t("b-form-radio-group",{attrs:{options:e.options,name:e.field.name},on:{change:e.input},model:{value:e.selected,callback:function(t){e.selected=t},expression:"selected"}})],1)],1)},s=[],l=(i(6352),i(7605)),d=i(4977),o={name:"OptionsTaxonomy",components:{},props:{field:{type:Object,required:!0},model:{type:[Object,Array],required:!0},namespaceStore:{type:String,required:!0}},data(){return{options:[],selected:null}},mounted(){this.loadTerms(),this.selected=this.getValue()},methods:{loadTerms(){let e=this.getFistVocab();if(e&&d.Z.config){const t=new l.Z(e,d.Z.config);t.get().then((()=>{this.options=t.getOptions()}))}},getFistVocab(){if(this.field.definition_settings.handler_settings.target_bundles){const e=Object.keys(this.field.definition_settings.handler_settings.target_bundles);return this.field.definition_settings.handler_settings.target_bundles[e[0]]}return null},getValue(){if(this.model[this.field.name]&&this.model[this.field.name][0]&&this.model[this.field.name][0].target_id)return this.model[this.field.name][0].target_id},input(e){const t=[];t.push({target_id:e}),this.$emit("setValue",t)}}},r=o,a=i(1001),u=(0,a.Z)(r,n,s,!1,null,null,null),f=u.exports}}]);
//# sourceMappingURL=BuilderCv.umd.min.365.js.map